from aiogram import F, Router
from aiogram import Bot, Dispatcher, types
from Config import exemplyar_bot
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart, Command, CommandObject
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from keyboards import keyboard as kb
import asyncio
from AdminPanel.Admins import admins
from Database.Database import DatabaseClass


bot = exemplyar_bot.bot #–í–∑—è—Ç–æ –∏–∑ —Ñ–∞–π–ª–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞, –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è —Ç–æ–∫–µ–Ω

router = Router()



class SubmitAnApplication(StatesGroup): #—Ö—Ä–∞–Ω–∏–ª–∏—â–µ –º–∞—à–∏–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –º–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ
    mentor_name = State() #–ò–º—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
    direction = State() #–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–∞
    experience = State() #–æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã




@router.message(F.text=='–°—Ç–∞—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–ºüë®‚Äçüî¨')
async def become_ment(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, '–ï—Å–ª–∏ –í—ã '
                                                 '–≥–æ—Ç–æ–≤—ã –æ–±—É—á–∏—Ç—å —á–µ–º—É-–ª–∏–±–æ –∏ '
                                                 '—Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ '
                                                 '–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ, '
                                                 '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –∏ –ø–æ—à–∞–≥–æ–≤–æ '
                                                 '–ø—Ä–æ–π–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤',
                           reply_markup=kb.become_ment)

@router.message(F.text=='–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É‚úçÔ∏è')
async def statement(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    statement = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å', callback_data=f"–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É"), InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='–û—Ç–º–µ–Ω–∞ –ø–æ—Å—Ç–∞')],
            ])
    await bot.send_message(message.from_user.id, '–°–µ–π—á–∞—Å –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∞–Ω–∫–µ—Ç—É, '
                                                 '–æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤. –ù–∞—á–∏–Ω–∞–µ–º?',
                           reply_markup=statement)



@router.callback_query(F.data == '–û—Ç–º–µ–Ω–∞ –≥–æ—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏')
async def close(callback: CallbackQuery, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await callback.answer()  # —á—Ç–æ–±—ã –ø—Ä–æ–ø–∞–ª–∏ —á–∞—Å–∏–∫–∏
    await bot.delete_message(callback.from_user.id, callback.message.message_id)
    await bot.send_message(callback.from_user.id, '–ï—Å–ª–∏ –í—ã '
                                                 '–≥–æ—Ç–æ–≤—ã –æ–±—É—á–∏—Ç—å —á–µ–º—É-–ª–∏–±–æ –∏ '
                                                 '—Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ '
                                                 '–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ, '
                                                 '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –∏ –ø–æ—à–∞–≥–æ–≤–æ '
                                                 '–ø—Ä–æ–π–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤',
                           reply_markup=kb.become_ment)



@router.callback_query(F.data == '–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É')
async def give(callback: CallbackQuery, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await callback.answer()  # —á—Ç–æ–±—ã –ø—Ä–æ–ø–∞–ª–∏ —á–∞—Å–∏–∫–∏
    await bot.delete_message(callback.from_user.id, callback.message.message_id)
    await bot.send_message(callback.from_user.id,
                           f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∏–º—è. –ö–∞–∫ –º—ã –º–æ–∂–µ–º –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?")
    await state.set_state(SubmitAnApplication.mentor_name)

@router.message(SubmitAnApplication.mentor_name)
async def name(message: Message, state: FSMContext):
    if len(message.text) > 30:
        await bot.send_message(message.from_user.id,
                               "–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –∏–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ—Ä–æ—á–µ")
    else:
        user_bd = DatabaseClass(TgUserID=message.from_user.id)

        await state.update_data(name=message.text)
        await state.update_data(user_name=f"@{message.from_user.username}")
        await state.update_data(id=f"{message.from_user.id}") # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ


        await bot.send_message(message.from_user.id,
                               "–•–æ—Ä–æ—à–æ. –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ "
                               "–Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π, –ø–æ –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å")
        await state.set_state(SubmitAnApplication.direction)  # –ó–∞–ø—Ä–∞–≤—à–∏–≤–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–∞

@router.message(SubmitAnApplication.direction)
async def direction(message: Message, state: FSMContext):
    if len(message.text) > 100:
        await bot.send_message(message.from_user.id,
                               "–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ—Ä–æ—á–µ")
    else:
        await state.update_data(direction=message.text)
        await bot.send_message(message.from_user.id,
                               "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –∏ —Å–≤–æ—ë–º –æ–ø—ã—Ç–µ –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏–∏")
        await state.set_state(SubmitAnApplication.experience)  #–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–Ω—Ñ—É –æ–± –æ–ø—ã—Ç–µ

@router.message(SubmitAnApplication.experience)
async def experience(message: Message, state: FSMContext):
    if len(message.text) > 1000:
        await bot.send_message(message.from_user.id,
                               "–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ—Ä–æ—á–µ")
    else:
        await state.update_data(experience=message.text)
        data = await state.get_data()

        send_or_cancel = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—åüõ´', callback_data=f"–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"),
             InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å‚ùå', callback_data='–û—Ç–º–µ–Ω–∞ –≥–æ—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏')],
        ])
        await bot.send_message(message.from_user.id, f"<b>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>\n{data['direction']}\n\n"
                                                     f"<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—Å:</b>\n{data['experience']}\n\n"
                                                     f"<b>–ê–≤—Ç–æ—Ä</b>üëâ{data['user_name']}, {data['name']}",
                               reply_markup=send_or_cancel)



@router.callback_query(F.data == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
async def send(callback: CallbackQuery, state: FSMContext):
    await callback.answer()  # —á—Ç–æ–±—ã –ø—Ä–æ–ø–∞–ª–∏ —á–∞—Å–∏–∫–∏
    await bot.delete_message(callback.from_user.id, callback.message.message_id)

    await bot.send_message(callback.from_user.id,
                           f"–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∑–∞—è–≤–∫—Éüôè\n"
                           f"–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 —Å—É—Ç–æ–∫."
                           f"\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    await asyncio.sleep(0.5)

    data = await state.get_data()
    for admin in admins: #—Ä–∞—Å—Å—ã–ª–∫–∞–µ–º –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
        sent_message = await bot.send_message(chat_id=admin,
                               text=f"–ó–∞—è–≤–∫–∞ –Ω–∞ –º–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æüî•üî•üî•üî•üî•\n\n"
                                    f"<b>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>\n{data['direction']}\n\n"
                                                         f"<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ–Ω—Ç–æ—Ä–µ:</b>\n{data['experience']}\n\n"
                                                         f"<b>–ê–≤—Ç–æ—Ä</b>üëâ{data['user_name']}, {data['name']}\n"
                                                         f"<b>id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> {data['id']}")
        # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.pin_chat_message(chat_id=admin, message_id=sent_message.message_id)
        await asyncio.sleep(0.5)

    await state.clear() #–æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
