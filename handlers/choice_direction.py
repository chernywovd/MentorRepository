from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

import asyncio

from aiogram import F, Router
from aiogram import Bot, Dispatcher, types
from Config import exemplyar_bot
from aiogram.filters import CommandStart, Command, CommandObject
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from keyboards import keyboard as kb

import datetime

from Database.Database import DatabaseClass





bot = exemplyar_bot.bot #–í–∑—è—Ç–æ –∏–∑ —Ñ–∞–π–ª–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞, –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è —Ç–æ–∫–µ–Ω

router = Router()


@router.message(F.text=='–ù–∞–π—Ç–∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞üîé')
async def search_mentor(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–∞',
                           reply_markup=kb.type_of_mentor)

@router.message(F.text=='–ù–∞–∑–∞–¥‚¨ÖÔ∏è')
async def back(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id,
                           f"<b>{message.from_user.first_name}</b>, "
                           f"–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤—É\n\n"
                           f"–ï—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –ø–ª–æ—â–∞–¥–∫—É, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ªüëá\n<b>¬´–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µüåç¬ª</b>",
                           reply_markup=kb.main_menu)

@router.message(F.text=='–ù–∞–∑–∞–¥‚Ü©Ô∏è')
async def back(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id,
                           '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–∞',
                           reply_markup=kb.type_of_mentor)


@router.message(F.text=='–†–µ–ø–µ—Ç–∏—Ç–æ—Ä—ãüë®‚Äçüè´')
async def tutors(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∫–∞–∫ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤, —Ç–∞–∫ –∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —É—Å–ª—É–≥–∏ '
                                                 '–≤—ã–ø–æ–ª–Ω–µ–Ω—è–π –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π, –Ω–∞–ø–∏—Å–∞–Ω–∏–π —ç—Å—Å–µ, –¥–∏–ø–ª–æ–º–æ–≤ –∏ –∏–Ω—ã—Ö –Ω–∞—É—á–Ω—ã—Ö —Ä–∞–±–æ—Ç',
                           reply_markup=kb.tutors_type)


@router.message(F.text=='–¢—Ä–µ–Ω–µ—Ä—ãüí™')
async def trainers(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
                           reply_markup=kb.sports_type)
@router.message(F.text=='–¢–∞–Ω—Ü—ãüíÉ')
async def dancing(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–Ω—Ü–µ–≤',
                           reply_markup=kb.dancing)
@router.message(F.text=='–ù–∞–∑–∞–¥üèÉ')
async def trainers(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
                           reply_markup=kb.sports_type)





@router.message(F.text=='–ú–µ–Ω—Ç–æ—Ä—ã –ø–æ –∑–∞—Ä–∞–±–æ—Ç–∫—Éü§ë')
async def earn(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∫–∞–∫ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, '
                                                 '—Ç–∞–∫ –∏ –ø—Ä–æ–π—Ç–∏ –∏—Ö –æ–±—É—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –¥–æ–±–∏—Ç—å—Å—è '
                                                 '—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –Ω–∏—à–µ',
                           reply_markup=kb.earn_type)



@router.message(F.text=='–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ —è–∑üèåÔ∏è‚Äç‚ôÇÔ∏è')
async def languages(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∏–∑—É—á–∏—Ç—å",
                           reply_markup=kb.languages)
@router.message(F.text=='–ë—å—é—Ç–∏-—Å—Ñ–µ—Ä–∞üíÖ')
async def beauty(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ, –≤ –∫–∞–∫–æ–π –±—å—é—Ç–∏-—Å—Ñ–µ—Ä–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å –º–∞—Å—Ç–µ—Ä–æ–º",
                           reply_markup=kb.beauty_sphere)
@router.message(F.text=='–ú–æ–¥–µ–ª–∏–Ω–≥üõ´')
async def modeling(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á–µ–º—É —Ö–æ—Ç–∏—Ç–µ –æ–±—É—á–∏—Ç—å—Å—è",
                           reply_markup=kb.modeling)

@router.message(F.text=='–ù–∞–∑–∞–¥üîô')
async def back(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∫–∞–∫ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤, —Ç–∞–∫ –∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —É—Å–ª—É–≥–∏ "
                                                 "–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–π –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π, –Ω–∞–ø–∏—Å–∞–Ω–∏–π —ç—Å—Å–µ, –¥–∏–ø–ª–æ–º–æ–≤ –∏ –∏–Ω—ã—Ö –Ω–∞—É—á–Ω—ã—Ö —Ä–∞–±–æ—Ç",
                           reply_markup=kb.tutors_type)
@router.message(F.text=='–ù–∞–∑–∞–¥üö∂')
async def back(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∫–∞–∫ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, '
                                                 '—Ç–∞–∫ –∏ –ø—Ä–æ–π—Ç–∏ –∏—Ö –æ–±—É—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –¥–æ–±–∏—Ç—å—Å—è '
                                                 '—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –Ω–∏—à–µ',
                           reply_markup=kb.earn_type)

@router.message(F.text=='–ò—Å–∫—É—Å—Å—Ç–≤–æüé≠')
async def art(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞",
                           reply_markup=kb.art)
@router.message(F.text=='–ú—É–∑—ã–∫–∞üé∂')
async def art2(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
                           reply_markup=kb.art2)
@router.message(F.text=='–ù–∞–∑–∞–¥')
async def art2(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞",
                           reply_markup=kb.art)



@router.message(F.text=='–ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏ –ø–æ –∑–¥–æ—Ä–æ–≤—å—éüë©‚Äç‚öïÔ∏è')
async def earn(message: Message, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
                           reply_markup=kb.health)


