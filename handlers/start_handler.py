import asyncio
import datetime
from aiogram import F, Router
from aiogram import Bot, Dispatcher
from Config import exemplyar_bot
from aiogram.filters import CommandStart, Command, CommandObject
from aiogram.types import Message, CallbackQuery, BotCommand
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram import types
from keyboards import keyboard as kb
from Database.Database import DatabaseClass

bot = exemplyar_bot.bot #–í–∑—è—Ç–æ –∏–∑ —Ñ–∞–π–ª–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞, –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è —Ç–æ–∫–µ–Ω

router = Router()

# async def set_default_commands(dp):
#     await dp.bot.set_my_commands([
#         types.BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
#     ])

admins = [6027246732]
@router.message(Command(commands=["start", "help"]))
async def start_comand(message: Message, state: FSMContext):
    await state.clear()  # –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    commands = [
        BotCommand(command="start", description="–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
    ]
    await bot.set_my_commands(commands)

    user_bd = DatabaseClass(TgUserID=message.from_user.id)

    if message.text == '/start':
        if await user_bd.check_user_in_the_list() == True:

            #–°—Ç–∞–≤–∏–º Activity = 1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            id_user = (await user_bd.select_user()).get('Id')
            await user_bd.update_query(UpdateQuery=f"UPDATE users SET Activity = 1 "
                                                   f"WHERE Id = {id_user};")


            await bot.send_message(message.from_user.id,
                                   f"<b>{message.from_user.first_name}</b>, "
                                   f"–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤—É\n\n"
                                   f"–ï—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –ø–ª–æ—â–∞–¥–∫—É, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ªüëá\n<b>¬´–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µüåç¬ª</b>",
                                   reply_markup=kb.main_menu)
        else:
            await user_bd.insert_user() #–∑–∞–Ω–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
            await bot.send_message(message.from_user.id,
                                   f"<b>{message.from_user.first_name}</b>, "
                                   f"–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤—É\n\n"
                                   f"–ï—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –ø–ª–æ—â–∞–¥–∫—É, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ªüëá\n<b>¬´–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µüåç¬ª</b>",
                                   reply_markup=kb.main_menu)


