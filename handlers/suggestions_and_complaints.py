from aiogram import F, Router
from aiogram import Bot, Dispatcher, types
from Config import exemplyar_bot
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart, Command, CommandObject
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.enums import ContentType
import asyncio
import random

from handlers.mentors import dict_directions

from keyboards import keyboard as kb
from Database.Database import DatabaseClass


bot = exemplyar_bot.bot #–í–∑—è—Ç–æ –∏–∑ —Ñ–∞–π–ª–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞, –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è —Ç–æ–∫–µ–Ω

router = Router()


class SuggestionsOrComplaint(StatesGroup): #—Ö—Ä–∞–Ω–∏–ª–∏—â–µ –º–∞—à–∏–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –∂–∞–ª–æ–± –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    text = State() #–¢–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    video = State()
    photo = State()


@router.message(F.text=='–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∂–∞–ª–æ–±—ãüìù')
async def suggestionsorcomplaint(message: Message, state: FSMContext):
    await state.clear()  # –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await bot.send_message(message.from_user.id,
                           f"–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –∫–∞–∫ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–∞, "
                           f"—Ç–∞–∫ –∏ –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –ª—é–±–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞",
                           reply_markup=kb.suggestion_or_complaint)

@router.callback_query((F.data == '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é') | (F.data == '–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è'))
async def suggestion(callback: CallbackQuery, state: FSMContext):
    await state.clear() #–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await callback.answer()  # —á—Ç–æ–±—ã –ø—Ä–æ–ø–∞–ª–∏ —á–∞—Å–∏–∫–∏
    await bot.delete_message(callback.from_user.id, callback.message.message_id)

    if callback.data == '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é':
        await state.update_data(IsIdea=True)
        await bot.send_message(callback.from_user.id,
                               f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –í–∞—à—É –∏–¥–µ—éü™∂",
                               reply_markup=kb.cancellation)
    elif callback.data == '–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è':
        await state.update_data(IsComplaint=True)
        await bot.send_message(callback.from_user.id,
                               f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –í–∞—à—É –∂–∞–ª–æ–±—Éü™∂",
                               reply_markup=kb.cancellation)

    await state.update_data(UserName=f"@{callback.from_user.username}")
    await state.set_state(SuggestionsOrComplaint.text)

@router.message(SuggestionsOrComplaint.text)
async def text_idea(message: Message, state: FSMContext):
    if len(message.text) > 2500:
        await bot.send_message(message.from_user.id,
                               "–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ—Ä–æ—á–µ",
                                reply_markup=kb.suggestion_or_complaint)
    else:
        data = await state.get_data()
        if data.get('IsIdea') is not None:
            await state.update_data(TextIdea=message.text)
        elif data.get('IsComplaint') is not None:
            await state.update_data(TextComplaint=message.text)


        video_or_photo = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='+–í–∏–¥–µ–æ', callback_data='+–í–∏–¥–µ–æ'), InlineKeyboardButton(text='+–§–æ—Ç–æ', callback_data='+–§–æ—Ç–æ')],
        [InlineKeyboardButton(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', callback_data='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∏–¥–µ–æ –∏ —Ñ–æ—Ç–æ')]
        ])

        await bot.send_message(message.from_user.id,
                               "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å, –µ—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ, "
                               "–ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–¥–µ–æ –∏–ª–∏ —Ñ–æ—Ç–æ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ª–∏–±–æ "
                               "–Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å¬ª",
                               reply_markup=video_or_photo)


@router.callback_query(F.data == '+–í–∏–¥–µ–æ')
async def video(callback: CallbackQuery, state: FSMContext):
    await callback.answer()  # —á—Ç–æ–±—ã –ø—Ä–æ–ø–∞–ª–∏ —á–∞—Å–∏–∫–∏
    await bot.delete_message(callback.from_user.id, callback.message.message_id)

    await bot.send_message(callback.from_user.id,
                           f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–¥–µ–æ")
    await state.set_state(SuggestionsOrComplaint.video)
@router.message(lambda message: message.content_type != ContentType.VIDEO, SuggestionsOrComplaint.video)
async def handle_no_video(message: Message, state: FSMContext):
    await bot.send_message(message.from_user.id,
                           "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∏–¥–µ–æ –ª–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ ¬´–û—Ç–º–µ–Ω–∞¬ª")
@router.message(lambda message: message.content_type == ContentType.VIDEO, SuggestionsOrComplaint.video)
async def handle_video(message: Message, state: FSMContext):
    await state.update_data(video=message.video.file_id)

    data = await state.get_data()

    place_a_mes = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data=f"–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä –∏–ª–∏ –∂–ª")],
                [InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='–û—Ç–º–µ–Ω–∞ –ø–æ—Å—Ç–∞')]
            ])

    if data.get('IsIdea') is not None:
        await bot.send_video(chat_id=message.from_user.id,
                             video=data['video'],
                             caption=f"{data['TextIdea']}",
                             reply_markup=place_a_mes)
    elif data.get('IsComplaint') is not None:
        await bot.send_video(chat_id=message.from_user.id,
                             video=data['video'],
                             caption=f"{data['TextComplaint']}",
                             reply_markup=place_a_mes)





@router.callback_query(F.data == '+–§–æ—Ç–æ')
async def video(callback: CallbackQuery, state: FSMContext):
    await callback.answer()  # —á—Ç–æ–±—ã –ø—Ä–æ–ø–∞–ª–∏ —á–∞—Å–∏–∫–∏
    await bot.delete_message(callback.from_user.id, callback.message.message_id)

    await bot.send_message(callback.from_user.id,
                           f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ")
    await state.set_state(SuggestionsOrComplaint.photo)
@router.message(lambda message: message.content_type != ContentType.PHOTO, SuggestionsOrComplaint.photo)
async def handle_no_photo(message: Message, state: FSMContext):
    await bot.send_message(message.from_user.id,
                           "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –ª–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ ¬´–û—Ç–º–µ–Ω–∞¬ª")
@router.message(lambda message: message.content_type == ContentType.PHOTO, SuggestionsOrComplaint.photo)
async def handle_photo(message: Message, state: FSMContext):
    await state.update_data(photo=message.photo[-1].file_id)

    data = await state.get_data()

    place_a_mes = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data=f"–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä –∏–ª–∏ –∂–ª")],
        [InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='–û—Ç–º–µ–Ω–∞ –ø–æ—Å—Ç–∞')]
    ])

    if data.get('IsIdea') is not None:
        await bot.send_photo(chat_id=message.from_user.id,
                             photo=data['photo'],
                             caption=f"{data['TextIdea']}",
                             reply_markup=place_a_mes)
    elif data.get('IsComplaint') is not None:
        await bot.send_photo(chat_id=message.from_user.id,
                             photo=data['photo'],
                             caption=f"{data['TextComplaint']}",
                             reply_markup=place_a_mes)




@router.callback_query(F.data == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∏–¥–µ–æ –∏ —Ñ–æ—Ç–æ')
async def skip(callback: CallbackQuery, state: FSMContext):
    await callback.answer()  # —á—Ç–æ–±—ã –ø—Ä–æ–ø–∞–ª–∏ —á–∞—Å–∏–∫–∏
    await bot.delete_message(callback.from_user.id, callback.message.message_id)

    data = await state.get_data()

    place_a_mes = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data=f"–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä –∏–ª–∏ –∂–ª")],
        [InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='–û—Ç–º–µ–Ω–∞ –ø–æ—Å—Ç–∞')]
    ])

    if data.get('IsIdea') is not None:
        await bot.send_message(callback.from_user.id,
                               f"{data['TextIdea']}",
                               reply_markup=place_a_mes)
    elif data.get('IsComplaint') is not None:
        await bot.send_message(callback.from_user.id,
                               f"{data['TextComplaint']}",
                               reply_markup=place_a_mes)


@router.callback_query(F.data == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä –∏–ª–∏ –∂–ª')
async def send(callback: CallbackQuery, state: FSMContext):
    await callback.answer()  # —á—Ç–æ–±—ã –ø—Ä–æ–ø–∞–ª–∏ —á–∞—Å–∏–∫–∏
    await bot.delete_message(callback.from_user.id, callback.message.message_id)


    data = await state.get_data()

    if data.get('IsIdea') is not None:
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–¥–∞–Ω–Ω—É—é –∏–¥–µ—é!\n\n"
                                    f"–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ –¥–∞–¥–∏–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—åüôè",
                               reply_markup=kb.main_menu)
        second = random.randint(1, 27)
        await asyncio.sleep(second)

        if data.get('video') is None and data.get('photo') is None: #–∏–¥–µ—è —á–∏—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–º
            sent_message = await bot.send_message(chat_id=893630880,
                                                  text=f"üëÄ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç {data['UserName']}\n\n"
                                                  f"{data['TextIdea']}")
            await bot.pin_chat_message(chat_id=893630880, message_id=sent_message.message_id)  # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

        elif data.get('video') is not None: # –∏–¥–µ—è —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º –≤–∏–¥–µ–æ
            sent_message = await bot.send_message(chat_id=893630880,
                                                  text=f"üëÄ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç {data['UserName']}üëá")
            await bot.send_video(chat_id=893630880,
                                 video=data['video'],
                                 caption=f"{data['TextIdea']}")
            await bot.pin_chat_message(chat_id=893630880, message_id=sent_message.message_id)  # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

        elif data.get('photo') is not None: # –∏–¥–µ—è —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
            sent_message = await bot.send_message(chat_id=893630880,
                                                  text=f"üëÄ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç {data['UserName']}üëá")
            await bot.send_photo(chat_id=893630880,
                                 photo=data['photo'],
                                 caption=f"{data['TextIdea']}")
            await bot.pin_chat_message(chat_id=893630880, message_id=sent_message.message_id)  # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ



    elif data.get('IsComplaint') is not None:
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º!\n\n"
                                    f"–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –í–∞—à—É –∂–∞–ª–æ–±—É, —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –∏ –ø—Ä–∏–º–µ–º –º–µ—Ä—ã",
                               reply_markup=kb.main_menu)
        second = random.randint(1, 27)
        await asyncio.sleep(second)

        if data.get('video') is None and data.get('photo') is None:  # –∂–∞–ª–æ–±–∞ —á–∏—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–º
            sent_message = await bot.send_message(chat_id=893630880,
                                                  text=f"üëÄ –ñ–∞–ª–æ–±–∞ –æ—Ç {data['UserName']}\n\n"
                                                       f"{data['TextComplaint']}")
            await bot.pin_chat_message(chat_id=893630880, message_id=sent_message.message_id)  # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

        elif data.get('video') is not None:  # –ñ–∞–ª–æ–±–∞ —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º –≤–∏–¥–µ–æ
            sent_message = await bot.send_message(chat_id=893630880,
                                                  text=f"üëÄ –ñ–∞–ª–æ–±–∞ –æ—Ç {data['UserName']}üëá")
            await bot.send_video(chat_id=893630880,
                                 video=data['video'],
                                 caption=f"{data['TextComplaint']}")
            await bot.pin_chat_message(chat_id=893630880, message_id=sent_message.message_id)  # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

        elif data.get('photo') is not None:  # –ñ–∞–ª–æ–±–∞ —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
            sent_message = await bot.send_message(chat_id=893630880,
                                                  text=f"üëÄ –ñ–∞–ª–æ–±–∞ –æ—Ç {data['UserName']}üëá")
            await bot.send_photo(chat_id=893630880,
                                 photo=data['photo'],
                                 caption=f"{data['TextComplaint']}")
            await bot.pin_chat_message(chat_id=893630880, message_id=sent_message.message_id)  # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ


